#
# {{ ansible_managed }}
#

# For more options and information see
# http://rptl.io/configtxt
# Some settings may impact device functionality. See link above for details

# Uncomment some or all of these to enable the optional hardware interfaces
dtparam=i2c_arm={{ bootstrap_raspberrypi__dtparam_i2c_arm | ternary('on', 'off')  }}
dtparam=i2s={{ bootstrap_raspberrypi__dtparam_i2s | ternary('on', 'off') }}
dtparam=spi={{ bootstrap_raspberrypi__dtparam_spi | ternary('on', 'off') }}

# Enable audio (loads snd_bcm2835)
dtparam=audio={{ bootstrap_raspberrypi__dtparam_audio | ternary('on', 'off') }}

# Additional overlays and parameters are documented
# /boot/firmware/overlays/README

# Automatically load overlays for detected cameras
camera_auto_detect=1

# Automatically load overlays for detected DSI displays
display_auto_detect=1

# Automatically load initramfs files, if found
auto_initramfs=1

# Enable DRM VC4 V3D driver
dtoverlay=vc4-kms-v3d
max_framebuffers=2

# Don't have the firmware create an initial video= setting in cmdline.txt.
# Use the kernel's default instead.
disable_fw_kms_setup=1

{% if bootstrap_ansible__architecture == 'aarch64' %}
# Run in 64-bit mode
arm_64bit=1

{% endif -%}
# Disable compensation for displays with overscan
disable_overscan=1

# Run as fast as firmware / board allows
arm_boost=1

[cm4]
# Enable host mode on the 2711 built-in XHCI USB controller.
# This line should be removed if the legacy DWC2 controller is required
# (e.g. for USB device mode) or if USB support is not required.
otg_mode=1

[cm5]
dtoverlay=dwc2,dr_mode=host

[all]
hdmi_force_hotplug={{ bootstrap_raspberrypi__hdmi_force_hotplug | ternary(1,0) }}
{% if bootstrap_raspberrypi__hdmi_group | int  > 0 %}
hdmi_group={{ bootstrap_raspberrypi__hdmi_group }}
{% endif -%}
{% if bootstrap_raspberrypi__hdmi_mode | int  > 0 %}
hdmi_mode={{ bootstrap_raspberrypi__hdmi_mode }}
{% endif -%}
{% if bootstrap_raspberrypi__gpu_mem | int  > 0 %}
gpu_mem={{ bootstrap_raspberrypi__gpu_mem }}
{% endif -%}

{% for dtparam in bootstrap_raspberrypi__dtparams %}
{%   if dtparam.comment is defined %}
# {{ dtparam.comment }}
{%   endif -%}
dtparam={{ dtparam.value }}
{% endfor -%}

{% for dtoverlay in bootstrap_raspberrypi__dtoverlays %}
{%   if dtoverlay.comment is defined %}
# {{ dtoverlay.comment }}
{%   endif -%}
dtoverlay={{ dtoverlay.value }}
{% endfor -%}
