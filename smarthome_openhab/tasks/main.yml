---

- name: Install openhab
  tags: [ 'smarthome_openhab' ]
  block:

    - name: Create openhab directories
      ansible.builtin.file:
        mode: '755'
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ smarthome_openhab__addons_dir }}"
        - "{{ smarthome_openhab__config_dir }}/automation/js"
        - "{{ smarthome_openhab__config_dir }}/items"
        - "{{ smarthome_openhab__config_dir }}/services"
        - "{{ smarthome_openhab__config_dir }}/sitemaps"
        - "{{ smarthome_openhab__config_dir }}/things"
        - "{{ smarthome_openhab__config_dir }}/transform"
        - "{{ smarthome_openhab__userdata_dir }}"

    - name: Generate openhab configuration files
      ansible.builtin.template:
        mode: '644'
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - src: addons.cfg.j2
          dest: "{{ smarthome_openhab__config_dir }}/services/addons.cfg"
        - src: basicui.cfg.j2
          dest: "{{ smarthome_openhab__config_dir }}/services/basicui.cfg"
        - src: runtime.cfg.j2
          dest: "{{ smarthome_openhab__config_dir }}/services/runtime.cfg"
      notify:
        - Restart openhab container

    - name: Generate items files
      ansible.builtin.template:
        mode: '644'
        src: items.j2
        dest: "{{ smarthome_openhab__config_dir }}/items/{{ item.key }}.items"
      with_dict: "{{ smarthome_openhab__items }}"
      vars:
        name: "{{ item.key }}"
        items: "{{ item.value }}"
      notify:
        - Restart openhab container

    - name: Generate sitemap files
      ansible.builtin.template:
        mode: '644'
        src: sitemaps.j2
        dest: "{{ smarthome_openhab__config_dir }}/sitemaps/{{ item.key }}.sitemap"
      with_dict: "{{ smarthome_openhab__sitemaps }}"
      vars:
        name: "{{ item.key }}"
        sitemap: "{{ item.value }}"
      notify:
        - Restart openhab container

    - name: Generate things files
      ansible.builtin.template:
        mode: '644'
        src: things.j2
        dest: "{{ smarthome_openhab__config_dir }}/things/{{ item.key }}.things"
      with_dict: "{{ smarthome_openhab__things }}"
      vars:
        name: "{{ item.key }}"
        things: "{{ item.value }}"
      notify:
        - Restart openhab container

    - name: Copy source files
      ansible.builtin.template:
        mode: '644'
        src: "files/{{ item.source }}"
        dest: "{{ smarthome_openhab__config_dir }}/{{ item.dest }}"
      with_items: "{{ smarthome_openhab__source_files }}"
      notify:
        - Restart openhab container

    - name: Install openhab container
      containers.podman.podman_container:
        name: "{{ smarthome_openhab__container.name }}"
        hostname: "{{ smarthome_openhab__container.hostname }}"
        image: "{{ smarthome_openhab__container.image }}"
        ip: "{{ smarthome_openhab__container.ip }}"
        network: "{{ smarthome_openhab__container.network }}"
        recreate: "{{ podman___update_mode | default(false) }}"
        restart_policy: "{{ smarthome_openhab__container.restart_policy }}"
        etc_hosts: "{{ smarthome_openhab__container.hosts }}"
        expose: "{{ smarthome_openhab__container.expose }}"
        publish: "{{ smarthome_openhab__container.publish }}"
        env: "{{ smarthome_openhab__container.environment }}"
        timezone: "{{ smarthome_openhab__container.timezone }}"
        volume: "{{ smarthome_openhab__container.volumes }}"
      when: smarthome_openhab__ipv6 | length == 0
