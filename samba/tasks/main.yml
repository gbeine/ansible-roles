---

- name: Install and configure Samba
  tags: [ 'samba' ]
  when: samba__server_enable
  block:

  - name: Install Samba server packages
    tags: [ 'packages' ]
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ samba__server_packages }}"

  - name: Install Samba winbind packages
    tags: [ 'packages' ]
    when: samba__winbind_enable
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ samba__winbind_packages }}"

  - name: Install smbldap packages
    tags: [ 'packages' ]
    when: samba__smbldap_enable
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ samba__smbldap_packages }}"

  - name: Generate configuration files
    tags: [ 'configuration' ]
    ansible.builtin.template:
      src: etc/samba/smb.conf.j2
      dest: /etc/samba/smb.conf
      owner: root
      group: root
      mode: 0644
      validate: 'testparm -s %s'
    notify:
    - Restart Samba server
    - Restart winbind

  - name: Create username map file if needed
    tags: [ 'configuration' ]
    when: samba__server_username_map | length > 0
    ansible.builtin.template:
      src: etc/samba/smbusers.j2
      dest: /etc/samba/smbusers
      owner: root
      group: root
      mode: 0644
    notify:
      - Restart Samba server

  - name: Create Samba users if they don't exist yet
    tags: [ 'configuration' ]
    when: samba__users | length > 0
    ansible.builtin.shell: >
      set -o nounset -o pipefail -o errexit &&
      (pdbedit --user={{ item.name }} 2>&1 > /dev/null) \
      || (echo '{{ item.password }}'; echo '{{ item.password }}') \
      | smbpasswd -s -a {{ item.name }}
    args:
      executable: /bin/bash
    with_items: "{{ samba__users }}"
    no_log: true
    register: create_user_output
    changed_when: "'Added user' in create_user_output.stdout"

  - name: Enable Samba services
    tags: [ 'configuration', 'service' ]
    ansible.builtin.service:
      name: "{{ item }}"
      state: started
      enabled: yes
    with_items:
    - smbd
    - nmbd

  - name: Enable Samba services
    tags: [ 'configuration', 'service' ]
    when: samba__winbind_enable
    ansible.builtin.service:
      name: winbind
      state: started
      enabled: yes
