---
# tasks file for roles/nginx

- name: Install nginx packages
  ansible.builtin.apt:
    name: "{{ item }}"
    install_recommends: no
    state: present
  with_items: "{{ nginx__packages_combined }}"
  tags:
  - nginx
  - packages

- name: Generate configuration file
  ansible.builtin.template:
    src: etc/nginx/nginx.conf.j2
    dest: "{{ nginx__etc_path }}/nginx.conf"
    owner: root
    group: root
    mode: 0644
  tags:
  - nginx
  - configuration

- name: Generate configuration snippet for SSL/TLS
  ansible.builtin.template:
    src: etc/nginx/snippets/ssl.conf.j2
    dest: "{{ nginx__snippets_path }}/ssl.conf"
    owner: root
    group: root
    mode: 0644
  tags:
  - nginx
  - configuration

- name: Generate configuration snippet for acme
  ansible.builtin.template:
    src: etc/nginx/snippets/acme-challenge.conf.j2
    dest: "{{ nginx__snippets_path }}/acme-challenge.conf"
    owner: root
    group: root
    mode: 0644
  when: nginx__acme_enable
  tags:
  - nginx
  - acme
  - configuration

- name: Generate configuration snippet for PHP/FastCGI
  ansible.builtin.template:
    src: etc/nginx/snippets/fastcgi-php.conf.j2
    dest: "{{ nginx__snippets_path }}/fastcgi-php.conf"
    owner: root
    group: root
    mode: 0644
  when: nginx__php_enable
  tags:
  - nginx
  - php
  - configuration

- name: Generate configuration file for PHP/FastCGI
  ansible.builtin.template:
    src: etc/nginx/conf.d/fastcgi-php.conf.j2
    dest: "{{ nginx__conf_path }}/fastcgi-php.conf"
    owner: root
    group: root
    mode: 0644
  when: nginx__php_enable
  tags:
  - nginx
  - php
  - configuration

- name: Create sites configuration
  include: site.yml
  with_items: "{{ nginx__sites }}"
  loop_control:
    loop_var: site
  tags:
  - nginx
  - configuration
