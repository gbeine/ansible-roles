---
# tasks file for roles/nginx

- name: Install and configure nginx
  tags: [ 'nginx' ]
  when: nginx__enable
  block:

  - name: Install nginx packages
    tags: [ 'packages' ]
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ nginx__packages_combined }}"

  - name: Generate configuration file
    tags: [ 'configuration' ]
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
    with_items:
    - src: etc/nginx/nginx.conf.j2
      dest: "{{ nginx__etc_path }}/nginx.conf"
    - src: etc/nginx/snippets/ssl.conf.j2
      dest: "{{ nginx__snippets_path }}/ssl.conf"

  - name: Generate configuration snippet for acme
    tags: [ 'configuration' ]
    when: nginx__acme_enable
    ansible.builtin.template:
      src: etc/nginx/snippets/acme-challenge.conf.j2
      dest: "{{ nginx__snippets_path }}/acme-challenge.conf"
      owner: root
      group: root
      mode: 0644

  - name: Generate configuration snippet for PHP/FastCGI
    tags: [ 'configuration', 'php' ]
    when: nginx__php_enable
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
    with_items:
    - src: etc/nginx/snippets/fastcgi-php.conf.j2
      dest: "{{ nginx__snippets_path }}/fastcgi-php.conf"
    - src: etc/nginx/conf.d/fastcgi-php.conf.j2
      dest: "{{ nginx__conf_path }}/fastcgi-php.conf"

- name: Create sites configuration
  tags: [ 'configuration' ]
  when: nginx__enable
  include: site.yml
  loop_control:
    loop_var: site
  with_items: "{{ nginx__sites }}"
