---
# tasks file for roles/apt

- name: Bootstrap apt setup
  tags: [ 'apt' ]
  block:

  - name: 'Update APT cache'
    ansible.builtin.apt:
      update_cache: 'yes'

  - name: Install required packages
    tags: [ 'packages' ]
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
    with_items: "{{ apt__packages_combined }}"

  - name: Remove obsolete configuration files
    tags: [ 'bootstrap', 'configuration' ]
    ansible.builtin.file:
      dest: "{{ item }}"
      state: absent
    with_items: "{{ apt__files_absent }}"

- name: Configure apt setup
  tags: [ 'apt' ]
  block:

  - name: Create APT configuration files
    tags: [ 'configuration' ]
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      owner: root
      group: root
      mode: 0644
    with_items:
    - src: etc/apt/apt.conf.d/50languages.j2
      dest: /etc/apt/apt.conf.d/50languages
    - src: etc/apt/apt.conf.d/50recommends.j2
      dest: /etc/apt/apt.conf.d/50recommends
    - src: etc/apt/apt.conf.d/50suggests.j2
      dest: /etc/apt/apt.conf.d/50suggests
    - src: etc/apt/apt.conf.d/50periodic.j2
      dest: /etc/apt/apt.conf.d/50periodic
    - src: etc/apt/apt.conf.d/50unattended-upgrades.j2
      dest: /etc/apt/apt.conf.d/50unattended-upgrades

  - name: Fetch keys for apt repositories
    tags: [ 'configuration' ]
    include_tasks: repos.yml
    loop_control:
      loop_var: repos
    with_items: "{{ apt__sources_combined }}"

  - name: Create apt sources lists
    tags: [ 'configuration' ]
    ansible.builtin.template:
      src: etc/apt/sources.list.d/source.list.j2
      dest: "/etc/apt/sources.list.d/{{ item.name }}.list"
      owner: root
      group: root
      mode: 0644
    vars:
      repos: "{{ item.repos }}"
    with_items: "{{ apt__sources_combined }}"

  - name: 'Update APT cache'
    ansible.builtin.apt:
      update_cache: 'yes'
