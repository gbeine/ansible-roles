---
# tasks file for roles/backup

- name: Install packages for SSH
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ backup__ssh_client_packages }}"

- name: Check if backup key exists on host
  ansible.builtin.stat:
    path: "~/.ssh/{{ backup__ssh_key_name }}"
  register: ssh_key_stat_result

- name: Generate SSH key pair for backup over SSH
  community.crypto.openssh_keypair:
    comment: "{{ backup__ssh_comment }}"
    path: "{{ backup__ssh_key_path }}"
    size: "{{ backup__ssh_key_size }}"
    state: present
  when: not ssh_key_stat_result.stat.exists

# next two steps follow the documentation taken from Hetzner docs and Stackoverflow
# https://docs.hetzner.com/robot/storage-box/backup-space-ssh-keys
# https://stackoverflow.com/questions/5386482/how-to-run-the-sftp-command-with-a-password-from-bash-script#5386587
- name: Copy public key to authorized key on storagebox
  ansible.builtin.shell: |
    sshpass -e sftp -oBatchMode=no -oStrictHostKeyChecking=no -b - {{ backup__ssh_user }}@{{ backup__ssh_host }} << !
    mkdir .ssh
    chmod 700 .ssh
    put {{ backup__ssh_key_path }}.pub .ssh/authorized_keys
    chmod 600 .ssh/authorized_keys
    !
  environment:
    SSHPASS: "{{ backup__ssh_password }}"
  when: not ssh_key_stat_result.stat.exists

- name: Move SSH keys to ~/.ssh directory
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: ~/.ssh/
    mode: 0600
    remote_src: yes
  with_items:
  - "{{ backup__ssh_key_path }}"
  - "{{ backup__ssh_key_path }}.pub"
  when: not ssh_key_stat_result.stat.exists

- name: Remove temporary SSH keys
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "{{ backup__ssh_key_path }}"
  - "{{ backup__ssh_key_path }}.pub"
