---
# tasks file for roles/backup

- name: Generate password file
  ansible.builtin.copy:
    dest: /root/.borg_passphrase
    content: |
      {{ backup__borg_password }}
    owner: root
    group: root
    mode: 0640
  when: backup__borg_password is defined
  tags:
  - backup
  - borg
  - configuration

- name: Install packages for borgbackup
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ _backup__borg_packages }}"
  tags:
  - backup
  - borg
  - packages

- name: Create borg cache directory
  ansible.builtin.file:
    path: "{{ backup__borg_cache_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0750
  when: backup__borg_cache_dir | length > 0
  tags:
  - backup
  - borg
  - bootstrap

# TODO: make step idempotent
# TODO: respect cache dir configuration
- name: Initialize borg repository
  ansible.builtin.shell: "borg info {{ backup__borg_backup_dir }} || borg init --encryption=repokey {{ backup__borg_backup_dir }}"
  environment:
    BORG_CACHE_DIR: "{{ backup__borg_cache_dir }}"
    BORG_PASSPHRASE: "{{ backup__borg_password }}"
    BORG_RSH: "{{ backup__borg_rsh }}"
  tags:
  - backup
  - borg
  - bootstrap
