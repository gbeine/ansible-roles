---
# tasks file for roles/mysql

- name: Install and configure MySQL client
  tags: [ 'mysql' ]
  when: mysql__client_enable
  block:
  
  - name: Install MySQL client packages
    tags: [ 'packages' ]
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ mysql__client_packages_combined }}"

- name: Install and configure MySQL server
  tags: [ 'mysql' ]
  when: mysql__server_enable
  block:
  
  - name: Install MySQL server packages
    tags: [ 'packages' ]
    ansible.builtin.apt:
      name: "{{ item }}"
      install_recommends: no
      state: present
    with_items: "{{ mysql__server_packages_combined }}"
    register: mysql_server_packages_installation_result

  - name: Set password for root
    tags: [ 'bootstrap' ]
    when: mysql__password.root is defined and mysql_server_packages_installation_result.changed and mysql__server_password_reset[mysql__flavor] is defined
    ansible.builtin.shell: "{{ mysql__server_password_reset[mysql__flavor] }}"

  - name: Create .my.cnf
    tags: [ 'bootstrap' ]
    when: mysql__password.root is defined
    ansible.builtin.template:
      src: my.cnf
      dest: /root/.my.cnf
      owner: root
      group: root
      mode: 0600
    vars:
      user: 'root'
      password: "{{ mysql__password.root }}"

  - name: Removes all anonymous user accounts
    tags: [ 'bootstrap', 'configuration', 'cleanup' ]
    community.mysql.mysql_user:
      login_user: root
      login_password: "{{ mysql__password.root }}"
      login_unix_socket: '/var/run/mysqld/mysqld.sock'
      name: ''
      host_all: yes
      state: absent

  - name: Create databases
    tags: [ 'configuration' ]
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql__password.root }}"
      login_unix_socket: '/var/run/mysqld/mysqld.sock'
      name: "{{ mysql__databases }}"
      encoding: utf8
      collation: utf8_bin
      state: present

  - name: Create database users with privileges
    tags: [ 'configuration' ]
    community.mysql.mysql_user:
      login_user: root
      login_password: "{{ mysql__password.root }}"
      login_unix_socket: '/var/run/mysqld/mysqld.sock'
      name: "{{ item.name }}"
      password: "{{  mysql__password[item.name] }}"
      priv: "{{ item.privileges }}"
      state: present
    with_items: "{{ mysql__accounts }}"

  - name: Create logrotate authentication file
    tags: [ 'bootstrap' ]
    when: mysql__flavor == "mariadb"
    ansible.builtin.template:
      src: logrotate.cnf
      dest: /etc/mysql/logrotate.cnf
      owner: root
      group: root
      mode: 0600
    vars:
      password: "{{ mysql__password.logrotate }}"

  - name: Create logrotate configuration
    tags: [ 'bootstrap' ]
    when: mysql__flavor == "mariadb"
    ansible.builtin.template:
      src: mysql-server
      dest: /etc/logrotate.d/mysql-server
      owner: root
      group: root
      mode: 0644
