###
### {{ ansible_managed }}
###

#
# The MySQL database server configuration file.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options and with
# --print-defaults to see which it would actually understand and use.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

# Here is entries for some specific programs
# The following values assume you have at least 32M ram

[mysqld]
#
# * Basic Settings
#
user      = {{ mysql__server_user }}
pid-file  = {{ mysql__server_pid_file }}
socket    = {{ mysql__server_socket }}
port      = {{ mysql__server_port }}
datadir   = {{ mysql__server_data_dir }}

# If MySQL is running as a replication slave, this should be
# changed. Ref https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmpdir
tmpdir    = {{ mysql__server_tmp_dir }}
#
# Instead of skip-networking the default is now to listen only on
# localhost which is more compatible and is not less secure.
bind-address            = {{ mysql__server_bind_address }}
mysqlx-bind-address     = {{ mysql__server_mysqlx_bind_address }}
#
# * Fine Tuning
#
key_buffer_size         = {{ mysql__server_key_buffer_size }}
max_allowed_packet      = {{ mysql__server_max_allowed_packet }}
thread_stack            = {{ mysql__server_thread_stack }}

thread_cache_size       = {{ mysql__server_thread_cache_size }}

# This replaces the startup script and checks MyISAM tables if needed
# the first time they are touched
myisam-recover-options  = {{ mysql__server_myisam_recover_options }}

max_connections         = {{ mysql__server_max_connections }}

table_open_cache        = {{ mysql__server_table_open_cache }}

#
# * Logging and Replication
#
# Both location gets rotated by the cronjob.
#
# Log all queries
# Be aware that this log type is a performance killer.
general_log_file        = {{ mysql__server_general_log_file }}
general_log             = {{ mysql__server_general_log | ternary('1', '0')}}
#
# Error log - should be very few entries.
#
log_error = {{ mysql__server_log_error }}
#
# Here you can see queries with especially long duration
slow_query_log          = {{ mysql__server_slow_query_log | ternary('1', '0')}}
slow_query_log_file     = {{ mysql__server_slow_query_log_file }}
long_query_time         = {{ mysql__server_long_query_time }}
{{ '# ' if not mysql__server_log_queries_not_using_indexes }}log-queries-not-using-indexes
#
# The following can be used as easy to replay backup logs or for replication.
# note: if you are setting up a replication slave, see README.Debian about
#       other settings you may need to change.
server-id               = {{ mysql__server_server_id }}
log_bin                 = {{ mysql__server_log_bin }}
binlog_expire_logs_seconds = {{ mysql__server_binlog_expire_logs_seconds }}
max_binlog_size         = {{ mysql__server_max_binlog_size }}
{% if mysql__server_binlog_do_db | length > 0 %}
{% for db in mysql__server_binlog_do_db %}
binlog_do_db            = {{ db }}
{% endfor %}
{% endif %}
{% if mysql__server_binlog_ignore_db | length > 0 %}
{% for db in mysql__server_binlog_ignore_db %}
binlog_ignore_db        = {{ db }}
{% endfor %}
{% endif %}

character-set-server    = {{ mysql__server_character_set_server }}
collation-server        = {{ mysql__server_collation_server }}
default-storage-engine  = {{ mysql__server_default_storage_engine }}
innodb_log_file_size    = {{ mysql__server_innodb_log_file_size }}
sql_mode                = {{ mysql__server_sql_mode | join(',') }}
transaction-isolation   = {{ mysql__server_transaction_isolation }}
binlog_format           = {{ mysql__server_binlog_format }}
log_bin_trust_function_creators = {{ mysql__server_log_bin_trust_function_creators | ternary('1', '0') }}

{% if mysql__server_optimizer_switch | length > 0 %}
{% for key, value in mysql__server_optimizer_switch.items() %}
{{ key }} = {{ value | ternary('on', 'off') }}
{% endfor %}
{% endif %}
