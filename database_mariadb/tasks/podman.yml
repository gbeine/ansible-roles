---

- name: Install MariaDB using podman
  block:

    - name: Create MariaDB directory
      ansible.builtin.file:
        mode: '750'
        owner: "{{ database_mariadb__podman_uid }}"
        group: "{{ database_mariadb__podman_gid }}"
        path: "{{ database_mariadb__podman_home }}"
        state: directory
      when: not ansible_check_mode

    - name: Install MariaDB container
      ansible.builtin.debug:
        msg: "{{ database_mariadb__podman_container }}"
      when: ansible_check_mode

    - name: Install MariaDB container
      containers.podman.podman_container:
        name: "{{ database_mariadb__podman_container.name }}"
        hostname: "{{ database_mariadb__podman_container.hostname }}"
        image: "{{ database_mariadb__podman_container.image }}"
        ip: "{{ database_mariadb__podman_container.ip }}"
        network: "{{ database_mariadb__podman_container.network }}"
        env: "{{ podman__container_environment | combine(database_mariadb__podman_container.environment | default({})) }}"
        recreate: "{{ podman___update_mode | default(false) }}"
        restart_policy: "{{ database_mariadb__podman_container.restart_policy | default('on-failure') }}"
        timezone: "{{ database_mariadb__podman_container.timezone | default(bootstrap_timezone__timezone) }}"
        volume: "{{ database_mariadb__podman_container.volumes | default([]) }}"
      when: not ansible_check_mode

    - name: Generate MariaDB configuration
      ansible.builtin.template:
        src: podman-custom.cnf.j2
        dest: "{{ database_mariadb__podman_home }}/custom.cnf"
        owner: "{{ database_mariadb__podman_uid }}"
        group: "{{ database_mariadb__podman_gid }}"
        mode: '640'
      notify: Restart MariaDB container

    - name: Install pymysql
      ansible.builtin.apt:
        update_cache: yes
        install_recommends: no
        pkg: "{{ database_mariadb__podman_packages }}"

    - name: Removes all anonymous user accounts
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ vault__mariadb_password_list[database_mariadb__podman_hostname]['root'] }}"
        login_host: "{{ database_mariadb__podman_ip }}"
        name: ''
        host_all: yes
        state: absent
      notify: Restart MariaDB container

    - name: Create databases
      community.mysql.mysql_db:
        login_user: root
        login_password: "{{ vault__mariadb_password_list[database_mariadb__podman_hostname]['root'] }}"
        login_host: "{{ database_mariadb__podman_ip }}"
        name: "{{ database_mariadb__databases }}"
        encoding: utf8
        collation: utf8_bin
        state: present
      notify: Restart MariaDB container

    - name: Create database users with privileges
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ vault__mariadb_password_list[database_mariadb__podman_hostname]['root'] }}"
        login_host: "{{ database_mariadb__podman_ip }}"
        name: "{{ item.name }}"
        password: "{{ vault__mariadb_password_list[database_mariadb__podman_hostname][item.name] }}"
        priv: "{{ item.privileges }}"
        state: present
      with_items: "{{ database_mariadb__accounts }}"
      notify: Restart MariaDB container

    - name: Generate root login configuration
      ansible.builtin.template:
        src: my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: '600'
      vars:
        database_mariadb__password:
          root: "{{ database_mariadb__podman_root_pass }}"
