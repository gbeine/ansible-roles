---

- name: Install nginx
  tags: [ 'webserver_nginx'  ]
  block:

    - name: Install nginx packages
      ansible.builtin.apt:
        update_cache: yes
        install_recommends: no
        pkg: "{{ webserver_nginx__packages }}"

    - name: Create directories
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: directory
      with_items:
        - path: "{{ webserver_nginx__www_dir }}"
        - path: "{{ webserver_nginx__acme_root_dir }}"

    - name: Generate nginx configuration files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.mode | default('root') }}"
        group: "{{ item.mode | default('root') }}"
        mode: "{{ item.mode | default('644') }}"
      with_items:
        - src: nginx.conf.j2
          dest: "{{ webserver_nginx__etc_dir }}/nginx.conf"
        - src: fastcgi-php.conf.j2
          dest: "{{ webserver_nginx__conf_dir }}/fastcgi-php.conf"
        - src: http-upgrade.conf.j2
          dest: "{{ webserver_nginx__conf_dir }}/http-upgrade.conf"
        - src: snippets/acme-challenge.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/acme-challenge.conf"
        - src: snippets/fastcgi-php.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/fastcgi-php.conf"
        - src: snippets/locations.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/locations.conf"
        - src: snippets/mediawiki.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/mediawiki.conf"
        - src: snippets/ssl.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/ssl.conf"
        - src: snippets/status.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/status.conf"
        - src: snippets/status-php.conf.j2
          dest: "{{ webserver_nginx__snippets_dir }}/status-php.conf"
        - src: nginx.j2
          dest: /etc/default/nginx
      notify:
        - Restart nginx

    - name: "Disable default site"
      ansible.builtin.file:
        dest: "{{ webserver_nginx__sites_enabled_dir }}/default"
        state: absent

    - name: Create sites configuration
      include_tasks: site.yml
      loop_control:
        loop_var: site
      with_items: "{{ webserver_nginx__sites }}"

    - name: Enable nginx service
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes
      when: not ansible_check_mode
