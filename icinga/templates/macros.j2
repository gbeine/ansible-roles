{% macro print(object) %}
{
{%   if object.import is defined %}
{%     for import in object.import %}
  import "{{ import }}"
{%     endfor %}

{%   endif %}
{%   for key, value in (object | dict2items | rejectattr('key', 'in', ['import', 'assign', 'ignore', 'for', 'to', 'class', 'type', 'doc']) | list | items2dict ).items()  %}
  {{ printelement(key, value) -}}
{%   endfor %}
{%   if object.assign is defined %}

{%     for assign in object.assign %}
  assign where {{ assign }}
{%     endfor %}
{%   endif %}
{%   if object.ignore is defined %}

{%     for ignore in object.ignore %}
  ignore where {{ ignore }}
{%     endfor %}
{%   endif %}
}
{% endmacro %}

{% macro printelement(key, value, quotekey=false) %}
{%- if value.add is defined %}
{{ printkey(key) }} += {{ printvalue(value.add) }} 
{%- elif value.sub is defined %}
{{ printkey(key) }} -= {{ printvalue(value.sub) }} 
{%- else %}
{{ printkey(key) }} = {{ printvalue(value) }} 
{%- endif %}
{% endmacro %}


{% macro printkey(key) %}
{{ '"'+key+'"' if key is match('^-.*$') else key -}}
{# '"'+key+'"' if quotekey else key -#}
{% endmacro %}


{% macro printvalue(value) %}
{% if value is mapping %}
{{ printdict(value) | indent(width=2) -}}
{% elif value is boolean %}
{{ value | lower }}
{% elif value is number %}
{{ value }}
{% elif value is iterable and value is not string %}
[ "{{ value | join('", "') }}" ]
{% elif value is string and value is match('^\d+(ms|s|m|h|d)?$') %}
{{ value }}
{% elif value is string and value is match('^\[.*\]$') %}
{{ value }}
{% elif value is string and value is match('^(config|name)$') %}
{{ value }}
{% elif value is string and value is match('^(host|service)\.vars.*$') %}
{{ value }}
{% else %}
"{{ value }}"
{% endif %}
{% endmacro %}

{% macro printdict(dict) %}
{
{%   for k, v in dict.items()  %}
  {{ printelement(k, v) -}}
{%   endfor %}
}
{% endmacro %}

