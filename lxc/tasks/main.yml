---
# tasks file for roles/lxc

- name: Install and configure lxc
  when: lxc__enable
  block:
  - name: Install lxc packages
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
    with_items: "{{ lxc__packages_combined }}"
    tags:
    - lxc
    - packages

  - name: Create lxc container directory
    ansible.builtin.file:
      path: "{{ lxc__path }}"
      state: directory
      owner: root
      group: root
      mode: 0755
    when: lxc__path | length > 0
    tags:
    - lxc
    - bootstrap

  - name: Generate configuration files
    ansible.builtin.template:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
      mode: 0644
    with_items:
    - src: etc/lxc/lxc.conf.j2
      dest: /etc/lxc/lxc.conf
    - src: etc/lxc/default.conf.j2
      dest: /etc/lxc/default.conf
    - src: etc/default/lxc.j2
      dest: /etc/default/lxc
    - src: etc/default/lxc-net.j2
      dest: /etc/default/lxc-net
    tags:
    - lxc
    - configuration

  - name: Stop and disable lxc-net service
    ansible.builtin.service:
      name: lxc-net
      state: stopped
      enabled: no
    tags:
    - lxc
    - configuration
    - service

- name: Setup lxc containers
  when: lxc__enable and lxc__container_enable
  block:
  - name: Create container
    community.general.lxc_container:
      name: "{{ item.name }}"
      container_log: true
      template: "{{ item.template }}"
      state: started
      template_options: "{{ item.template_options }}"
      container_config: "{{ item.container_config }}"
      container_command: |
        apt update
        apt install -y python3
        [[ -d ~/.ssh ]] || mkdir ~/.ssh
        echo "{{ lookup('file', lxc__container_ssh_key) }}" > ~/.ssh/authorized_keys
    with_items: "{{ lxc__containers_combined }}"
    environment: "{{ lxc__environment_combined }}"
    when: not lxc__bridge
