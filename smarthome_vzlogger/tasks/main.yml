---

- name: Deploy vzlogger container
  tags: [ 'smarthome_vzlogger' ]
  block:

    - name: Create vzlogger home directory
      ansible.builtin.file:
        mode: '750'
        owner: nobody
        group: nogroup
        path: "{{ smarthome_vzlogger__home }}"
        state: directory
      when: not ansible_check_mode

    - name: Generate vzlogger configuration files
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('644') }}"
      with_items:
        - src: vzlogger.conf.j2
          dest: "{{ smarthome_vzlogger__config_file }}"
      notify:
        - Restart vzlogger container


    - name: Create vzlogger podman container
      containers.podman.podman_container:
        name: "{{ smarthome_vzlogger__container.name }}"
        hostname: "{{ smarthome_vzlogger__container.hostname }}"
        image: "{{ smarthome_vzlogger__container.image }}"
        ip: "{{ smarthome_vzlogger__container.ip }}"
        network: "{{ smarthome_vzlogger__container.network }}"
        recreate: "{{ podman___update_mode | default(false) }}"
        restart_policy: "{{ smarthome_vzlogger__container.restart_policy }}"
        etc_hosts: "{{ smarthome_vzlogger__container.hosts }}"
        expose: "{{ smarthome_vzlogger__container.expose }}"
        publish: "{{ smarthome_vzlogger__container.publish }}"
        device: "{{ smarthome_vzlogger__container.devices }}"
        timezone: "{{ smarthome_vzlogger__container.timezone | default(bootstrap_timezone__timezone) }}"
        volume: "{{ smarthome_vzlogger__container.volumes }}"
      when: smarthome_vzlogger__ipv6 | length == 0

    - name: Create vzlogger podman container
      containers.podman.podman_container:
        name: "{{ smarthome_vzlogger__container.name }}"
        hostname: "{{ smarthome_vzlogger__container.hostname }}"
        image: "{{ smarthome_vzlogger__container.image }}"
        ip: "{{ smarthome_vzlogger__container.ip }}"
        network: "{{ smarthome_vzlogger__container.network }}"
        recreate: "{{ podman___update_mode | default(false) }}"
        restart_policy: "{{ smarthome_vzlogger__container.restart_policy }}"
        etc_hosts: "{{ smarthome_vzlogger__container.hosts }}"
        expose: "{{ smarthome_vzlogger__container.expose }}"
        publish: "{{ smarthome_vzlogger__container.publish }}"
        device: "{{ smarthome_vzlogger__container.devices }}"
        timezone: "{{ smarthome_vzlogger__container.timezone | default(bootstrap_timezone__timezone) }}"
        volume: "{{ smarthome_vzlogger__container.volumes }}"
      when: smarthome_vzlogger__ipv6 | length > 0
